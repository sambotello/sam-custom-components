import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';

const LabelStyled = styled.label`
    color: ${props => props.theme.borderColor};
    ${props => props.inline && 'margin-right: 10px'};
    font-family: ${props => props.theme.ff};
`;

const InputStyled = styled.input`
    border: 1px solid black;
    border-radius: 2px;
    background-color: #FFFFFF;
    padding: 8px;
    ${props => props.inline
        ?
        `
            display: inline-block;
        `
        :
        `
            display: block;
            width: 100%
        `
    };
    font-family: ${props => props.theme.ff};
    box-sizing: border-box;
    margin-bottom: 10px;
    color: ${props => props.theme.color};
    border: 1px solid ${props => props.theme.borderColor};
    background-color: ${props => props.theme.bgColor};
    font-size: ${props => props.big ? '1.5em' : '1em' };
    :focus {
        outline-color: transparent;
        outline-style: none;
    }
`;

InputStyled.defaultProps = {
    theme: {
        borderColor: 'palevioletred',
        bgColor: 'white',
        color: 'palevioletred',
        ff: 'Verdana, Geneva, sans-serif'
    }
}

LabelStyled.defaultProps = {
    theme: {
        borderColor: 'palevioletred',
        bgColor: 'white',
        color: 'palevioletred',
        ff: 'Verdana, Geneva, sans-serif'
    }
}

const theme = {
    borderColor: '#2c3e50',
    bgColor: '#34495e',
    color: '#95a5a6',
    ff: 'Verdana, Geneva, sans-serif'
};

const Input = (props) => {
    return(
        <div>
            {props.label && <LabelStyled htmlFor={props.name} inline={props.inline} theme={props.dark && theme}>{props.label}</LabelStyled>}
            <InputStyled type={props.type} name={props.name} value={props.value} onChange={props.onChange} inline={props.inline} big={props.big} theme={props.dark && theme} />
        </div>
    );
}

Input.propTypes = {
    label: PropTypes.string,
    type: PropTypes.string,
    name: PropTypes.string,
    value: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number
    ]),
    onChange: PropTypes.func,
    inline: PropTypes.bool,
    big: PropTypes.bool,
    dark: PropTypes.bool,
}
Input.defaultProps = {
    type: 'text',
    inline: false,
}

export default Input;
